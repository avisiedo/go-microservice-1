// Code generated by mockery v2.38.0. DO NOT EDIT.

package interactor

import mock "github.com/stretchr/testify/mock"

// HealthcheckInteractor is an autogenerated mock type for the HealthcheckInteractor type
type HealthcheckInteractor struct {
	mock.Mock
}

// IsLive provides a mock function with given fields:
func (_m *HealthcheckInteractor) IsLive() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsLive")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsReady provides a mock function with given fields:
func (_m *HealthcheckInteractor) IsReady() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsReady")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHealthcheckInteractor creates a new instance of HealthcheckInteractor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHealthcheckInteractor(t interface {
	mock.TestingT
	Cleanup(func())
}) *HealthcheckInteractor {
	mock := &HealthcheckInteractor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
